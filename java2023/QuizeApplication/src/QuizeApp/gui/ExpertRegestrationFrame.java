/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package QuizeApp.gui;

import QuizApp.Dao.ExpertDao;
import QuizApp.Dao.StudentDao;
import QuizApp.pojo.ExpertPojo;
import QuizApp.pojo.StudentPojo;
import java.sql.SQLException;
import javax.mail.MessagingException;
import javax.swing.JOptionPane;
import quizApp.util.Mailer;
import quizApp.util.UserProfile;
import quizApp.util.Validator;

/**
 *
 * @author Smart computer
 */
public class ExpertRegestrationFrame extends javax.swing.JFrame {

    /**
     * Creates new form ExpertRegestrationFrame
     */
    public ExpertRegestrationFrame() {
        initComponents();
        this.setTitle("ExpertRegestrationFrame");
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtExpertName = new javax.swing.JTextField();
        btnExpertRegester = new javax.swing.JButton();
        txtExpertPassword = new javax.swing.JPasswordField();
        btnExpertBack = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtExpertEmail = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(109, 67, 132));

        jLabel11.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        jLabel11.setText("Expert Email:");

        jLabel12.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        jLabel12.setText("Password: ");

        txtExpertName.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        txtExpertName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtExpertNameActionPerformed(evt);
            }
        });

        btnExpertRegester.setBackground(new java.awt.Color(153, 0, 153));
        btnExpertRegester.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        btnExpertRegester.setText("Regester");
        btnExpertRegester.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExpertRegesterActionPerformed(evt);
            }
        });

        txtExpertPassword.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N

        btnExpertBack.setBackground(new java.awt.Color(153, 0, 153));
        btnExpertBack.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        btnExpertBack.setText("Back");
        btnExpertBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExpertBackActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setIcon(new javax.swing.ImageIcon("E:\\sunil payslip\\E2.png")); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("EXPERT REGESTER");

        jLabel13.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        jLabel13.setText("Expert Name:");

        txtExpertEmail.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        txtExpertEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtExpertEmailActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(144, 144, 144)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnExpertRegester, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(102, 102, 102)
                                .addComponent(btnExpertBack, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtExpertName, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                                    .addComponent(txtExpertEmail)
                                    .addComponent(txtExpertPassword)))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addComponent(jLabel5)))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtExpertName, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtExpertEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtExpertPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(66, 66, 66)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExpertRegester, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExpertBack, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtExpertNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtExpertNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtExpertNameActionPerformed

    private void btnExpertRegesterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExpertRegesterActionPerformed
        // TODO add your handling code here:
        
        ExpertPojo expert=new ExpertPojo();
        expert.setExpertEmail(txtExpertEmail.getText().trim());
        expert.setExpertName(txtExpertName.getText().trim());
        expert.setExpertPassword(String.valueOf(txtExpertPassword.getPassword()));
        try{
             if(ExpertDao.addExpert(expert)){
                 JOptionPane.showMessageDialog(null,"Expert Regestered!");
                 Mailer.sendMailToExpert(txtExpertName.getText().trim(), txtExpertEmail.getText().trim(), String.valueOf(txtExpertPassword.getPassword()));
                 JOptionPane.showMessageDialog(null,"Mail Sent Succesfully to"+txtExpertEmail.getText().trim());
                 return;
              }
                JOptionPane.showMessageDialog(null,"Cant Regester Expert!");
        }catch(SQLException sq){
            JOptionPane.showMessageDialog(null,"DB Error in Expert Regester Frame");
            return;
        }catch(MessagingException ms){
            JOptionPane.showMessageDialog(null,"Mail Error in Expert Regestration Frame");
            return;
        }
    }//GEN-LAST:event_btnExpertRegesterActionPerformed

    private void btnExpertBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExpertBackActionPerformed
        // TODO add your handling code here:
        UserVarifyFrame userVarifyFrame=new UserVarifyFrame();
        userVarifyFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnExpertBackActionPerformed

    private void txtExpertEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtExpertEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtExpertEmailActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExpertRegestrationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExpertRegestrationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExpertRegestrationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExpertRegestrationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExpertRegestrationFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExpertBack;
    private javax.swing.JButton btnExpertRegester;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txtExpertEmail;
    private javax.swing.JTextField txtExpertName;
    private javax.swing.JPasswordField txtExpertPassword;
    // End of variables declaration//GEN-END:variables

    private boolean validateInputs() {
     if((txtExpertName.getText().trim().isEmpty()||txtExpertName.getText().trim().isEmpty()||String.valueOf(txtExpertPassword.getPassword()).trim().isEmpty())){
            JOptionPane.showMessageDialog(null,"Please Fill All The Field");
            return false;
        }
        /*if(!Validator.isValidEmail(txtExpertName.getText().trim())){
            JOptionPane.showMessageDialog(null,"Please Enter Valid Email");
            return false;
        }*/
        return true;    
    }
}
